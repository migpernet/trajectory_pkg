#!/usr/bin/env python3

import numpy as np
import math # or import numpy as np and use np.sin, np.cos
from scipy.integrate import odeint # Um ótimo integrador numérico

def ur5_matrices(q, dq):
    """
    Calculates the dynamics matrices (Mass, Gravity, Coriolis/Centrifugal terms)
    for the UR5 manipulator based on the provided MATLAB code.

    Args:
        q (list or np.array): Joint positions (q1 to q6).
        dq (list or np.array): Joint velocities (dq1 to dq6).

    Returns:
        tuple: A tuple containing:
            - M (np.array): The 6x6 Mass Matrix.
            - G (np.array): The 6x1 Gravity Vector.
            - CDq (np.array): The 6x1 Coriolis/Centrifugal term vector.
    """

    # Extract joint positions
    # MATLAB: q(1) ... q(6)
    # Python: q[0] ... q[5]
    q1, q2, q3, q4, q5, q6 = q[0], q[1], q[2], q[3], q[4], q[5]

    theta_1 = q[0] 
    theta_2 = q[1] 
    theta_3 = q[2] 
    theta_4 = q[3] 
    theta_5 = q[4] 
    theta_6 = q[5] 

    # Extract joint velocities
    dq1, dq2, dq3, dq4, dq5, dq6 = dq[0], dq[1], dq[2], dq[3], dq[4], dq[5]

    # --- Mass Matrix (M) elements ---
    m11 = (0.007460552829 * np.sin(q3 + q4 + q5) - 
           0.0002254000336 * np.cos(2.0 * q2 + 2.0 * q3 + 2.0 * q4 + 2.0 * q5) + 
           0.007460552829 * np.sin(2.0 * q2 + q3 + q4 + q5) + 
           0.7014282607 * np.cos(2.0 * q2 + q3) - 
           0.007460552829 * np.sin(q3 + q4 - 1.0 * q5) - 
           0.007460552829 * np.sin(2.0 * q2 + q3 + q4 - 1.0 * q5) - 
           0.05830173968 * np.sin(2.0 * q2 + 2.0 * q3 + q4) + 
           0.001614617887 * np.cos(2.0 * q2 + 2.0 * q3 + 2.0 * q4 + q5) + 
           0.8028639871 * np.cos(2.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5) - 
           0.001614617887 * np.cos(2.0 * q2 + 2.0 * q3 + 2.0 * q4 - 1.0 * q5) - 
           0.0002254000336 * np.cos(2.0 * q2 + 2.0 * q3 + 2.0 * q4 - 2.0 * q5) - 
           0.063140533 * np.sin(q3 + q4) + 
           0.006888811168 * np.sin(q4 + q5) - 
           0.063140533 * np.sin(2.0 * q2 + q3 + q4) - 
           0.006888811168 * np.sin(q4 - 1.0 * q5) + 
           0.7014282607 * np.cos(q3) + 
           0.00765364949 * np.cos(q5) + 
           0.006888811168 * np.sin(2.0 * q2 + 2.0 * q3 + q4 + q5) + 
           0.3129702942 * np.cos(2.0 * q2 + 2.0 * q3) - 
           0.05830173968 * np.sin(q4) - 
           0.005743907935 * np.cos(2.0 * q2 + 2.0 * q3 + 2.0 * q4) - 
           0.006888811168 * np.sin(2.0 * q2 + 2.0 * q3 + q4 - 1.0 * q5) + 
           1.28924888)

    m12 = (0.01615783641 * np.cos(q2 + q3 + q4) + 
           0.006888811168 * np.sin(q2 + q3 + q5) - 
           0.0004508000672 * np.cos(q2 + q3 + q4 + 2.0 * q5) + 
           0.006888811168 * np.sin(q2 + q3 - 1.0 * q5) + 
           0.00352803026 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.0002987944852 * np.cos(q2 + q3 + q4 + q5) + 
           0.1313181732 * np.sin(q2 + q3) + 
           0.007460552829 * np.sin(q2 + q5) + 
           0.007460552829 * np.sin(q2 - 1.0 * q5) + 
           0.348513447 * np.sin(q2))

    m13 = (0.01615783641 * np.cos(q2 + q3 + q4) + 
           0.006888811168 * np.sin(q2 + q3 + q5) - 
           0.0004508000672 * np.cos(q2 + q3 + q4 + 2.0 * q5) + 
           0.006888811168 * np.sin(q2 + q3 - 1.0 * q5) + 
           0.00352803026 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.0002987944852 * np.cos(q2 + q3 + q4 + q5) + 
           0.1313181732 * np.sin(q2 + q3))

    m14 = (0.01615783641 * np.cos(q2 + q3 + q4) - 
           0.0004508000672 * np.cos(q2 + q3 + q4 + 2.0 * q5) + 
           0.00352803026 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.0002987944852 * np.cos(q2 + q3 + q4 + q5))

    m15 = (0.006888811168 * np.sin(q2 + q3 - 1.0 * q5) - 
           0.006888811168 * np.sin(q2 + q3 + q5) - 
           0.002840479501 * np.cos(q2 + q3 + q4) - 
           0.0002987944852 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.00352803026 * np.cos(q2 + q3 + q4 + q5) - 
           0.007460552829 * np.sin(q2 + q5) + 
           0.007460552829 * np.sin(q2 - 1.0 * q5))

    m16 = -0.000138534912 * np.sin(q2 + q3 + q4) * np.sin(q5)

    m21 = (0.01615783641 * np.cos(q2 + q3 + q4) + 
           0.006888811168 * np.sin(q2 + q3 + q5) - 
           0.0004508000672 * np.cos(q2 + q3 + q4 + 2.0 * q5) + 
           0.006888811168 * np.sin(q2 + q3 - 1.0 * q5) + 
           0.00352803026 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.0002987944852 * np.cos(q2 + q3 + q4 + q5) + 
           0.1313181732 * np.sin(q2 + q3) + 
           0.007460552829 * np.sin(q2 + q5) + 
           0.007460552829 * np.sin(q2 - 1.0 * q5) + 
           0.348513447 * np.sin(q2))

    m22 = (1.402856521 * np.cos(q3) - 
           0.1166034794 * np.sin(q4) - 
           0.126281066 * np.cos(q3) * np.sin(q4) - 
           0.126281066 * np.cos(q4) * np.sin(q3) + 
           0.02755524467 * np.cos(q4) * np.sin(q5) - 
           0.001803200269 * np.cos(q5)**2 - 
           0.02984221131 * np.sin(q3) * np.sin(q4) * np.sin(q5) + 
           0.02984221131 * np.cos(q3) * np.cos(q4) * np.sin(q5) + 
           2.263576776)

    m23 = (0.7014282607 * np.cos(q3) - 
           0.1166034794 * np.sin(q4) - 
           0.063140533 * np.cos(q3) * np.sin(q4) - 
           0.063140533 * np.cos(q4) * np.sin(q3) + 
           0.02755524467 * np.cos(q4) * np.sin(q5) - 
           0.001803200269 * np.cos(q5)**2 - 
           0.01492110566 * np.sin(q3) * np.sin(q4) * np.sin(q5) + 
           0.01492110566 * np.cos(q3) * np.cos(q4) * np.sin(q5) + 
           0.644094696)

    m24 = (0.01377762234 * np.cos(q4) * np.sin(q5) - 
           0.063140533 * np.cos(q3) * np.sin(q4) - 
           0.063140533 * np.cos(q4) * np.sin(q3) - 
           0.05830173968 * np.sin(q4) - 
           0.001803200269 * np.cos(q5)**2 - 
           0.01492110566 * np.sin(q3) * np.sin(q4) * np.sin(q5) + 
           0.01492110566 * np.cos(q3) * np.cos(q4) * np.sin(q5) + 
           0.01612863983)

    m25 = np.cos(q5) * (0.01492110566 * np.sin(q3 + q4) + 0.01377762234 * np.sin(q4) - 0.003229235775)

    m26 = 0.000138534912 * np.cos(q5)

    m31 = (0.01615783641 * np.cos(q2 + q3 + q4) + 
           0.006888811168 * np.sin(q2 + q3 + q5) - 
           0.0004508000672 * np.cos(q2 + q3 + q4 + 2.0 * q5) + 
           0.006888811168 * np.sin(q2 + q3 - 1.0 * q5) + 
           0.00352803026 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.0002987944852 * np.cos(q2 + q3 + q4 + q5) + 
           0.1313181732 * np.sin(q2 + q3))

    m32 = (0.7014282607 * np.cos(q3) - 
           0.1166034794 * np.sin(q4) - 
           0.063140533 * np.cos(q3) * np.sin(q4) - 
           0.063140533 * np.cos(q4) * np.sin(q3) + 
           0.02755524467 * np.cos(q4) * np.sin(q5) - 
           0.001803200269 * np.cos(q5)**2 - 
           0.01492110566 * np.sin(q3) * np.sin(q4) * np.sin(q5) + 
           0.01492110566 * np.cos(q3) * np.cos(q4) * np.sin(q5) + 
           0.644094696)

    m33 = (0.02755524467 * np.cos(q4) * np.sin(q5) - 
           0.1166034794 * np.sin(q4) - 
           0.001803200269 * np.cos(q5)**2 + 
           0.644094696)

    m34 = (0.01377762234 * np.cos(q4) * np.sin(q5) - 
           0.05830173968 * np.sin(q4) - 
           0.001803200269 * np.cos(q5)**2 + 
           0.01612863983)

    m35 = np.cos(q5) * (0.01377762234 * np.sin(q4) - 0.003229235775)

    m36 = 0.000138534912 * np.cos(q5)

    m41 = (0.01615783641 * np.cos(q2 + q3 + q4) - 
           0.0004508000672 * np.cos(q2 + q3 + q4 + 2.0 * q5) + 
           0.00352803026 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) + 
           0.0004508000672 * np.cos(2.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.0002987944852 * np.cos(q2 + q3 + q4 + q5))

    m42 = (0.01377762234 * np.cos(q4) * np.sin(q5) - 
           0.063140533 * np.cos(q3) * np.sin(q4) - 
           0.063140533 * np.cos(q4) * np.sin(q3) - 
           0.05830173968 * np.sin(q4) - 
           0.001803200269 * np.cos(q5)**2 - 
           0.01492110566 * np.sin(q3) * np.sin(q4) * np.sin(q5) + 
           0.01492110566 * np.cos(q3) * np.cos(q4) * np.sin(q5) + 
           0.01612863983)

    m43 = (0.01377762234 * np.cos(q4) * np.sin(q5) - 
           0.05830173968 * np.sin(q4) - 
           0.001803200269 * np.cos(q5)**2 + 
           0.01612863983)

    m44 = (0.001803200269 * np.sin(q5)**2 + 
           0.01432543956)

    m45 = -0.003229235775 * np.cos(q5)

    m46 = 0.000138534912 * np.cos(q5)

    m51 = (0.006888811168 * np.sin(q2 + q3 - 1.0 * q5) - 
           0.006888811168 * np.sin(q2 + q3 + q5) - 
           0.002840479501 * np.cos(q2 + q3 + q4) - 
           0.0002987944852 * np.cos(1.0 * q5 - 1.0 * q3 - 1.0 * q4 - 1.0 * q2) - 
           0.00352803026 * np.cos(q2 + q3 + q4 + q5) - 
           0.007460552829 * np.sin(q2 + q5) + 
           0.007460552829 * np.sin(q2 - 1.0 * q5))

    m52 = np.cos(q5) * (0.01492110566 * np.sin(q3 + q4) + 0.01377762234 * np.sin(q4) - 0.003229235775)

    m53 = np.cos(q5) * (0.01377762234 * np.sin(q4) - 0.003229235775)

    m54 = -0.003229235775 * np.cos(q5)

    m55 = 0.002840479501

    m56 = 0

    m61 = -0.000138534912 * np.sin(q2 + q3 + q4) * np.sin(q5)

    m62 = 0.000138534912 * np.cos(q5)

    m63 = 0.000138534912 * np.cos(q5)

    m64 = 0.000138534912 * np.cos(q5)

    m65 = 0

    m66 = 0.000138534912


    # --- Coriolis and Centrifugal Matrix (C) elements ---
    c11 = (0.003730276414374999842393787474748 * dq5 * np.cos(theta_3 + theta_4 - 1.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq4 * np.cos(theta_3 + theta_4 - 1.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq3 * np.cos(theta_3 + theta_4 - 1.0 * theta_5) - 
           0.007460552828749999684787574949496 * dq2 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq3 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq4 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.003730276414374999842393787474748 * dq5 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.70142826072499997458464804367395 * dq2 * np.sin(2.0 * theta_2 + theta_3) - 
           0.35071413036249998729232402183698 * dq3 * np.sin(2.0 * theta_2 + theta_3) - 
           0.058301739682800002295692820553086 * dq2 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.058301739682800002295692820553086 * dq3 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.029150869841400001147846410276543 * dq4 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.0016146178873499999507912239238294 * dq2 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.0016146178873499999507912239238294 * dq3 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.0016146178873499999507912239238294 * dq4 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.00080730894367499997539561196191471 * dq5 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.80286398712999995641581563177169 * dq2 * np.sin(2.0 * theta_2) - 
           0.00045080006724164167807369918428151 * dq5 * np.sin(2.0 * theta_5) + 
           0.0016146178873499999507912239238294 * dq2 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq2 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.0016146178873499999507912239238294 * dq3 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq3 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.0016146178873499999507912239238294 * dq4 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq4 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) - 
           0.00080730894367499997539561196191471 * dq5 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) - 
           0.00022540003362082083903684959214075 * dq5 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) - 
           0.031570266499999999343373247029376 * dq3 * np.cos(theta_3 + theta_4) - 
           0.031570266499999999343373247029376 * dq4 * np.cos(theta_3 + theta_4) + 
           0.0034444055842192500098419838394648 * dq4 * np.cos(theta_4 + theta_5) + 
           0.0034444055842192500098419838394648 * dq5 * np.cos(theta_4 + theta_5) - 
           0.063140532999999998686746494058752 * dq2 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.031570266499999999343373247029376 * dq3 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.031570266499999999343373247029376 * dq4 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.0034444055842192500098419838394648 * dq4 * np.cos(theta_4 - 1.0 * theta_5) + 
           0.0034444055842192500098419838394648 * dq5 * np.cos(theta_4 - 1.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq2 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.0068888111684385000196839676789296 * dq3 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.0034444055842192500098419838394648 * dq4 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.0034444055842192500098419838394648 * dq5 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) - 
           0.029150869841400001147846410276543 * dq4 * np.cos(theta_4) - 
           0.35071413036249998729232402183698 * dq3 * np.sin(theta_3) - 
           0.0038268247450999998658660583572555 * dq5 * np.sin(theta_5) - 
           0.0068888111684385000196839676789296 * dq2 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) - 
           0.0068888111684385000196839676789296 * dq3 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) - 
           0.0034444055842192500098419838394648 * dq4 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) + 
           0.0034444055842192500098419838394648 * dq5 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) - 
           0.31297029415553834219565487728687 * dq2 * np.sin(2.0 * theta_2 + 2.0 * theta_3) - 
           0.31297029415553834219565487728687 * dq3 * np.sin(2.0 * theta_2 + 2.0 * theta_3) + 
           0.0057439079350250247732456720939354 * dq2 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.0057439079350250247732456720939354 * dq3 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.0057439079350250247732456720939354 * dq4 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.003730276414374999842393787474748 * dq3 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.003730276414374999842393787474748 * dq4 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.003730276414374999842393787474748 * dq5 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.00022540003362082083903684959214075 * dq2 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq3 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq4 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq5 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) + 
           0.007460552828749999684787574949496 * dq2 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) + 
           0.003730276414374999842393787474748 * dq3 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) + 
           0.003730276414374999842393787474748 * dq4 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) + 
           0.003730276414374999842393787474748 * dq5 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5))

    c12 = (0.0068888111684385000196839676789296 * dq2 * np.cos(theta_2 + theta_3 - 1.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_2 + theta_3 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.007460552828749999684787574949496 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.70142826072499997458464804367395 * dq1 * np.sin(2.0 * theta_2 + theta_3) - 
           0.058301739682800002295692820553086 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.80286398712999995641581563177169 * dq1 * np.sin(2.0 * theta_2) + 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.00029879448519999998214180525479833 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.00029879448519999998214180525479833 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.00029879448519999998214180525479833 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0019134123725500000413532464271782 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.13131817324289998816233548950549 * dq2 * np.cos(theta_2 + theta_3) + 
           0.13131817324289998816233548950549 * dq3 * np.cos(theta_2 + theta_3) + 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_2 + theta_5) - 
           0.063140532999999998686746494058752 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.0035280302599000001005646875995581 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0035280302599000001005646875995581 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0035280302599000001005646875995581 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.0019134123725500000413532464271782 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_2 - 1.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.34851344699999997622796854557237 * dq2 * np.cos(theta_2) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) - 
           0.31297029415553834219565487728687 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3) + 
           0.0057439079350250247732456720939354 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_2 + theta_3 + theta_5) + 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_2 + theta_3 + theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) - 
           0.016157836411999998427191371774825 * dq2 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.016157836411999998427191371774825 * dq3 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.016157836411999998427191371774825 * dq4 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq5 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.007460552828749999684787574949496 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) - 
           0.000069267455999999993313670509920144 * dq6 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5))

    c13 = (0.0068888111684385000196839676789296 * dq2 * np.cos(theta_2 + theta_3 - 1.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 - 1.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_2 + theta_3 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.35071413036249998729232402183698 * dq1 * np.sin(2.0 * theta_2 + theta_3) - 
           0.058301739682800002295692820553086 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) + 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.00029879448519999998214180525479833 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.00029879448519999998214180525479833 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.00029879448519999998214180525479833 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0019134123725500000413532464271782 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.13131817324289998816233548950549 * dq2 * np.cos(theta_2 + theta_3) - 
           0.031570266499999999343373247029376 * dq1 * np.cos(theta_3 + theta_4) + 
           0.13131817324289998816233548950549 * dq3 * np.cos(theta_2 + theta_3) - 
           0.031570266499999999343373247029376 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.0035280302599000001005646875995581 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0035280302599000001005646875995581 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0035280302599000001005646875995581 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.0019134123725500000413532464271782 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) - 
           0.35071413036249998729232402183698 * dq1 * np.sin(theta_3) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) - 
           0.31297029415553834219565487728687 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3) + 
           0.0057439079350250247732456720939354 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_2 + theta_3 + theta_5) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_2 + theta_3 + theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) - 
           0.016157836411999998427191371774825 * dq2 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.016157836411999998427191371774825 * dq3 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.016157836411999998427191371774825 * dq4 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq5 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) - 
           0.000069267455999999993313670509920144 * dq6 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5))

    c14 = (0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.029150869841400001147846410276543 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) + 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.00029879448519999998214180525479833 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.00029879448519999998214180525479833 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.00029879448519999998214180525479833 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0019134123725500000413532464271782 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) - 
           0.031570266499999999343373247029376 * dq1 * np.cos(theta_3 + theta_4) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 + theta_5) - 
           0.031570266499999999343373247029376 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.0035280302599000001005646875995581 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0035280302599000001005646875995581 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0035280302599000001005646875995581 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.0019134123725500000413532464271782 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 - 1.0 * theta_5) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) - 
           0.029150869841400001147846410276543 * dq1 * np.cos(theta_4) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) + 
           0.0057439079350250247732456720939354 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) - 
           0.016157836411999998427191371774825 * dq2 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.016157836411999998427191371774825 * dq3 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.016157836411999998427191371774825 * dq4 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq5 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) - 
           0.000069267455999999993313670509920144 * dq6 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5))

    c15 = (0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 - 1.0 * theta_5) - 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_2 + theta_3 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00080730894367499997539561196191471 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5) - 
           0.00080730894367499997539561196191471 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.0019134123725500000413532464271782 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0019134123725500000413532464271782 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0019134123725500000413532464271782 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0035280302599000001005646875995581 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 + theta_5) - 
           0.007460552828749999684787574949496 * dq5 * np.cos(theta_2 + theta_5) + 
           0.0019134123725500000413532464271782 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.0019134123725500000413532464271782 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) + 
           0.0019134123725500000413532464271782 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.00029879448519999998214180525479833 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 - 1.0 * theta_5) - 
           0.007460552828749999684787574949496 * dq5 * np.cos(theta_2 - 1.0 * theta_5) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) - 
           0.0038268247450999998658660583572555 * dq1 * np.sin(theta_5) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 + theta_5) - 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_2 + theta_3 + theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) + 
           0.0014202397504832835976179561399135 * dq2 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq3 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq4 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5))

    c16 = (-0.000069267455999999993313670509920144 * dq2 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq3 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq4 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq5 * np.sin(theta_2 + theta_3 + theta_4) * np.cos(theta_5))

    c21 = (0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_2 + theta_3 - 1.0 * theta_5) + 
           0.007460552828749999684787574949496 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.70142826072499997458464804367395 * dq1 * np.sin(2.0 * theta_2 + theta_3) + 
           0.058301739682800002295692820553086 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) + 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) + 
           0.80286398712999995641581563177169 * dq1 * np.sin(2.0 * theta_2) - 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) - 
           0.0016146178873500000592114411723799 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.007460552828749999684787574949496 * dq5 * np.cos(theta_2 + theta_5) + 
           0.063140532999999998686746494058752 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4) + 
           0.0016146178873500000592114411723799 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - 2.0 * theta_5) - 
           0.007460552828749999684787574949496 * dq5 * np.cos(theta_2 - 1.0 * theta_5) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) + 
           0.31297029415553834219565487728687 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3) - 
           0.0057439079350250247732456720939354 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) + 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) - 
           0.0014202397504832835976179561399135 * dq5 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.007460552828749999684787574949496 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5) + 
           0.000069267455999999993313670509920144 * dq6 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5))

    c22 = (0.5 * dq5 * np.cos(theta_5) * (0.029842211314999998739150299797984 * np.cos(theta_3 + theta_4) + 
                                          0.027555244673754000078735870715718 * np.cos(theta_4) + 
                                          0.0036064005379331338582704624684538 * np.sin(theta_5)) - 
           1.0 * dq4 * (0.058301739682800002295692820553086 * np.cos(theta_4) + 
                        0.063140532999999998686746494058752 * np.cos(theta_3) * np.cos(theta_4) - 
                        0.063140532999999998686746494058752 * np.sin(theta_3) * np.sin(theta_4) + 
                        0.013777622336877000039367935357859 * np.sin(theta_4) * np.sin(theta_5) + 
                        0.014921105657499999369575149898992 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) + 
                        0.014921105657499999369575149898992 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5)) - 
           1.0 * dq3 * (0.70142826072499997458464804367395 * np.sin(theta_3) + 
                        0.063140532999999998686746494058752 * np.cos(theta_3) * np.cos(theta_4) - 
                        0.063140532999999998686746494058752 * np.sin(theta_3) * np.sin(theta_4) + 
                        0.014921105657499999369575149898992 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) + 
                        0.014921105657499999369575149898992 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5)))

    c23 = (0.00090160013448328346456761561711346 * dq5 * np.sin(2 * theta_5) - 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_3 + theta_4 - theta_5) - 
           0.007460552828749999684787574949496 * dq3 * np.cos(theta_3 + theta_4 - theta_5) - 
           0.007460552828749999684787574949496 * dq4 * np.cos(theta_3 + theta_4 - theta_5) + 
           0.007460552828749999684787574949496 * dq5 * np.cos(theta_3 + theta_4 - theta_5) - 
           0.063140532999999998686746494058752 * dq2 * np.cos(theta_3 + theta_4) - 
           0.063140532999999998686746494058752 * dq3 * np.cos(theta_3 + theta_4) - 
           0.063140532999999998686746494058752 * dq4 * np.cos(theta_3 + theta_4) + 
           0.0068888111684385000196839676789296 * dq4 * np.cos(theta_4 + theta_5) + 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_4 + theta_5) - 
           0.058301739682800002295692820553086 * dq4 * np.cos(theta_4) - 
           0.70142826072499997458464804367395 * dq2 * np.sin(theta_3) - 
           0.70142826072499997458464804367395 * dq3 * np.sin(theta_3) - 
           0.0068888111684385000196839676789296 * dq4 * np.cos(theta_4 - theta_5) + 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_4 - theta_5) + 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.007460552828749999684787574949496 * dq3 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.007460552828749999684787574949496 * dq4 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.007460552828749999684787574949496 * dq5 * np.cos(theta_3 + theta_4 + theta_5))

    c24 = (0.00090160013448328346456761561711346 * dq5 * np.sin(2 * theta_5) - 
           0.058301739682800002295692820553086 * dq2 * np.cos(theta_4) - 
           0.058301739682800002295692820553086 * dq3 * np.cos(theta_4) - 
           0.058301739682800002295692820553086 * dq4 * np.cos(theta_4) - 
           0.063140532999999998686746494058752 * dq2 * np.cos(theta_3) * np.cos(theta_4) - 
           0.063140532999999998686746494058752 * dq3 * np.cos(theta_3) * np.cos(theta_4) - 
           0.063140532999999998686746494058752 * dq4 * np.cos(theta_3) * np.cos(theta_4) + 
           0.013777622336877000039367935357859 * dq5 * np.cos(theta_4) * np.cos(theta_5) + 
           0.063140532999999998686746494058752 * dq2 * np.sin(theta_3) * np.sin(theta_4) + 
           0.063140532999999998686746494058752 * dq3 * np.sin(theta_3) * np.sin(theta_4) - 
           0.013777622336877000039367935357859 * dq2 * np.sin(theta_4) * np.sin(theta_5) + 
           0.063140532999999998686746494058752 * dq4 * np.sin(theta_3) * np.sin(theta_4) - 
           0.013777622336877000039367935357859 * dq3 * np.sin(theta_4) * np.sin(theta_5) - 
           0.013777622336877000039367935357859 * dq4 * np.sin(theta_4) * np.sin(theta_5) + 
           0.014921105657499999369575149898992 * dq5 * np.cos(theta_3) * np.cos(theta_4) * np.cos(theta_5) - 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) - 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5) - 
           0.014921105657499999369575149898992 * dq3 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) - 
           0.014921105657499999369575149898992 * dq3 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5) - 
           0.014921105657499999369575149898992 * dq4 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) - 
           0.014921105657499999369575149898992 * dq4 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5) - 
           0.014921105657499999369575149898992 * dq5 * np.cos(theta_5) * np.sin(theta_3) * np.sin(theta_4))

    c25 = (0.00045080006724164167807369918428151 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00090160013448328346456761561711346 * dq2 * np.sin(2 * theta_5) + 
           0.00090160013448328346456761561711346 * dq3 * np.sin(2 * theta_5) + 
           0.00090160013448328346456761561711346 * dq4 * np.sin(2 * theta_5) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(1.0 * theta_5 - theta_3 - theta_2) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5 - 1.0 * theta_3 - 1.0 * theta_4 - 1.0 * theta_2) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.007460552828749999684787574949496 * dq1 * np.cos(theta_2 + theta_5) - 
           0.007460552828749999684787574949496 * dq1 * np.cos(theta_2 - 1.0 * theta_5) + 
           0.0032292357746999999015824478476588 * dq5 * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq6 * np.sin(theta_5) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_5 - 1.0 * theta_3 - 1.0 * theta_4 - 1.0 * theta_2) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.0014202397504832835976179561399135 * dq1 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_3 + theta_4) * np.cos(theta_5) + 
           0.014921105657499999369575149898992 * dq3 * np.cos(theta_3 + theta_4) * np.cos(theta_5) + 
           0.014921105657499999369575149898992 * dq4 * np.cos(theta_3 + theta_4) * np.cos(theta_5) - 
           0.014921105657499999369575149898992 * dq5 * np.sin(theta_3 + theta_4) * np.sin(theta_5) + 
           0.013777622336877000039367935357859 * dq2 * np.cos(theta_4) * np.cos(theta_5) + 
           0.013777622336877000039367935357859 * dq3 * np.cos(theta_4) * np.cos(theta_5) + 
           0.013777622336877000039367935357859 * dq4 * np.cos(theta_4) * np.cos(theta_5) - 
           0.013777622336877000039367935357859 * dq5 * np.sin(theta_4) * np.sin(theta_5))

    c26 = -np.sin(theta_5) * (0.000069267455999999993313670509920144 * dq5 - 0.000069267455999999993313670509920144 * dq1 * np.cos(theta_2 + theta_3 + theta_4))

    c31 = (0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.35071413036249998729232402183698 * dq1 * np.sin(2.0 * theta_2 + theta_3) + 
           0.058301739682800002295692820553086 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.00045080006724164167807369918428151 * dq5 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_2 + theta_3 - theta_5) + 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) - 
           0.0016146178873500000592114411723799 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.000034633727999999996656835254960072 * dq6 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.031570266499999999343373247029376 * dq1 * np.cos(theta_3 + theta_4) + 
           0.031570266499999999343373247029376 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.35071413036249998729232402183698 * dq1 * np.sin(theta_3) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) + 
           0.31297029415553834219565487728687 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3) + 
           0.0016146178873500000592114411723799 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.000034633727999999996656835254960072 * dq6 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.0057439079350250247732456720939354 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.0068888111684385000196839676789296 * dq5 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) - 
           0.0014202397504832835976179561399135 * dq5 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5))

    c32 = (0.00090160013448328346456761561711346 * dq5 * np.sin(2 * theta_5) - 
           0.058301739682800002295692820553086 * dq4 * np.cos(theta_4) + 
           0.70142826072499997458464804367395 * dq2 * np.sin(theta_3) + 
           0.063140532999999998686746494058752 * dq2 * np.cos(theta_3) * np.cos(theta_4) + 
           0.013777622336877000039367935357859 * dq5 * np.cos(theta_4) * np.cos(theta_5) - 
           0.063140532999999998686746494058752 * dq2 * np.sin(theta_3) * np.sin(theta_4) - 
           0.013777622336877000039367935357859 * dq4 * np.sin(theta_4) * np.sin(theta_5) + 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) + 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5) - 
           1.0e-35 * dq4 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) - 
           1.0e-35 * dq4 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5))

    c33 = (0.5 * dq5 * np.cos(theta_5) * (0.027555244673754000078735870715718 * np.cos(theta_4) + 
                                          0.0036064005379331338582704624684538 * np.sin(theta_5)) - 
           1.0 * dq4 * (0.058301739682800002295692820553086 * np.cos(theta_4) + 
                        0.013777622336877000039367935357859 * np.sin(theta_4) * np.sin(theta_5)))

    c34 = (0.00090160013448328346456761561711346 * dq5 * np.sin(2 * theta_5) - 
           0.058301739682800002295692820553086 * dq2 * np.cos(theta_4) - 
           0.058301739682800002295692820553086 * dq3 * np.cos(theta_4) - 
           0.058301739682800002295692820553086 * dq4 * np.cos(theta_4) + 
           0.013777622336877000039367935357859 * dq5 * np.cos(theta_4) * np.cos(theta_5) - 
           0.013777622336877000039367935357859 * dq2 * np.sin(theta_4) * np.sin(theta_5) - 
           0.013777622336877000039367935357859 * dq3 * np.sin(theta_4) * np.sin(theta_5) - 
           0.013777622336877000039367935357859 * dq4 * np.sin(theta_4) * np.sin(theta_5) - 
           1.0e-35 * dq2 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) - 
           1.0e-35 * dq2 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5))

    c35 = (0.00045080006724164167807369918428151 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00090160013448328346456761561711346 * dq2 * np.sin(2 * theta_5) + 
           0.00090160013448328346456761561711346 * dq3 * np.sin(2 * theta_5) + 
           0.00090160013448328346456761561711346 * dq4 * np.sin(2 * theta_5) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(1.0 * theta_5 - theta_3 - theta_2) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.007460552828749999684787574949496 * dq1 * np.cos(theta_2 + theta_5) - 
           0.007460552828749999684787574949496 * dq1 * np.cos(theta_2 - 1.0 * theta_5) + 
           0.0032292357746999999015824478476588 * dq5 * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq6 * np.sin(theta_5) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_5 - 1.0 * theta_3 - 1.0 * theta_4 - 1.0 * theta_2) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.0014202397504832835976179561399135 * dq1 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_3 + theta_4) * np.cos(theta_5) + 
           0.014921105657499999369575149898992 * dq3 * np.cos(theta_3 + theta_4) * np.cos(theta_5) + 
           0.014921105657499999369575149898992 * dq4 * np.cos(theta_3 + theta_4) * np.cos(theta_5) - 
           0.014921105657499999369575149898992 * dq5 * np.sin(theta_3 + theta_4) * np.sin(theta_5) + 
           0.013777622336877000039367935357859 * dq2 * np.cos(theta_4) * np.cos(theta_5) + 
           0.013777622336877000039367935357859 * dq3 * np.cos(theta_4) * np.cos(theta_5) + 
           0.013777622336877000039367935357859 * dq4 * np.cos(theta_4) * np.cos(theta_5) - 
           0.013777622336877000039367935357859 * dq5 * np.sin(theta_4) * np.sin(theta_5))

    c36 = -np.sin(theta_5) * (0.000069267455999999993313670509920144 * dq5 - 0.000069267455999999993313670509920144 * dq1 * np.cos(theta_2 + theta_3 + theta_4))

    c41 = (0.00045080006724164167807369918428151 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) + 
           0.029150869841400001147846410276543 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4) - 
           0.00045080006724164167807369918428151 * dq5 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) + 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 - theta_5) + 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) - 
           0.0016146178873499999507912239238294 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) - 
           0.0016146178873500000592114411723799 * dq5 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.000034633727999999996656835254960072 * dq6 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.031570266499999999343373247029376 * dq1 * np.cos(theta_3 + theta_4) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 + theta_5) + 
           0.031570266499999999343373247029376 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.029150869841400001147846410276543 * dq1 * np.cos(theta_4) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) + 
           0.0016146178873500000592114411723799 * dq5 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.000034633727999999996656835254960072 * dq6 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) + 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 - theta_5) - 
           0.0057439079350250247732456720939354 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 + theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) - 
           0.0014202397504832835976179561399135 * dq5 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5))

    c42 = (0.00090160013448328346456761561711346 * dq5 * np.sin(2 * theta_5) + 
           0.058301739682800002295692820553086 * dq2 * np.cos(theta_4) + 
           0.058301739682800002295692820553086 * dq3 * np.cos(theta_4) + 
           0.063140532999999998686746494058752 * dq2 * np.cos(theta_3) * np.cos(theta_4) - 
           0.063140532999999998686746494058752 * dq2 * np.sin(theta_3) * np.sin(theta_4) + 
           0.013777622336877000039367935357859 * dq2 * np.sin(theta_4) * np.sin(theta_5) + 
           0.013777622336877000039367935357859 * dq3 * np.sin(theta_4) * np.sin(theta_5) + 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) + 
           0.014921105657499999369575149898992 * dq2 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5) + 
           1.0e-35 * dq3 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) + 
           1.0e-35 * dq3 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5))

    c43 = (0.00090160013448328346456761561711346 * dq5 * np.sin(2 * theta_5) + 
           0.058301739682800002295692820553086 * dq2 * np.cos(theta_4) + 
           0.058301739682800002295692820553086 * dq3 * np.cos(theta_4) + 
           0.013777622336877000039367935357859 * dq2 * np.sin(theta_4) * np.sin(theta_5) + 
           0.013777622336877000039367935357859 * dq3 * np.sin(theta_4) * np.sin(theta_5) + 
           1.0e-35 * dq2 * np.cos(theta_3) * np.sin(theta_4) * np.sin(theta_5) + 
           1.0e-35 * dq2 * np.cos(theta_4) * np.sin(theta_3) * np.sin(theta_5))

    c44 = 0.00090160013448328346456761561711346 * dq5 * np.sin(2.0 * theta_5)

    c45 = (0.00045080006724164167807369918428151 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00090160013448328346456761561711346 * dq2 * np.sin(2 * theta_5) + 
           0.00090160013448328346456761561711346 * dq3 * np.sin(2 * theta_5) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) + 
           0.00090160013448328346456761561711346 * dq4 * np.sin(2.0 * theta_5) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0032292357746999999015824478476588 * dq5 * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq6 * np.sin(theta_5) + 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.0014202397504832835976179561399135 * dq1 * np.sin(theta_2 + theta_3 + theta_4))

    c46 = -np.sin(theta_5) * (0.000069267455999999993313670509920144 * dq5 - 0.000069267455999999993313670509920144 * dq1 * np.cos(theta_2 + theta_3 + theta_4))

    c51 = (0.00045080006724164167807369918428151 * dq2 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) - 
           0.00045080006724164167807369918428151 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 - 1.0 * theta_5) - 
           0.00045080006724164167807369918428151 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.00045080006724164167807369918428151 * dq3 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) + 
           0.00045080006724164167807369918428151 * dq4 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) + 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_2 + theta_3 - theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 - theta_5) + 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_2 + theta_3 - theta_5) + 
           0.00080730894367499997539561196191471 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + theta_5) + 
           0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5) + 
           0.00080730894367499997539561196191471 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 1.0 * theta_5) + 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 - 2.0 * theta_5) + 
           0.0016146178873500000592114411723799 * dq2 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0016146178873500000592114411723799 * dq3 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.0016146178873500000592114411723799 * dq4 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.000034633727999999996656835254960072 * dq6 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) - 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_2 + theta_5) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 + theta_5) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 + theta_5) + 
           0.0038268247450999998658660583572555 * dq1 * np.sin(theta_5) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(2.0 * theta_2 + 2.0 * theta_3 + theta_4 - 1.0 * theta_5) - 
           0.0016146178873500000592114411723799 * dq2 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.0016146178873500000592114411723799 * dq3 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.0016146178873500000592114411723799 * dq4 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) + 
           0.000034633727999999996656835254960072 * dq6 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) + 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_2 - theta_5) - 
           0.0034444055842192500098419838394648 * dq1 * np.cos(theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(theta_3 + theta_4 + theta_5) - 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.00022540003362082083903684959214075 * dq1 * np.sin(2.0 * theta_2 + 2.0 * theta_3 + 2.0 * theta_4 + 2.0 * theta_5) + 
           0.0014202397504832835976179561399135 * dq2 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq3 * np.sin(theta_2 + theta_3 + theta_4) + 
           0.0014202397504832835976179561399135 * dq4 * np.sin(theta_2 + theta_3 + theta_4) - 
           0.003730276414374999842393787474748 * dq1 * np.cos(2.0 * theta_2 + theta_3 + theta_4 + theta_5))

    c52 = (0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) - 
           0.00090160013448328346456761561711346 * dq2 * np.sin(2 * theta_5) - 
           0.00090160013448328346456761561711346 * dq3 * np.sin(2 * theta_5) - 
           0.00090160013448328346456761561711346 * dq4 * np.sin(2 * theta_5) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(theta_2 + theta_3 - theta_5) - 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_3 + theta_4 - theta_5) + 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) - 
           0.007460552828749999684787574949496 * dq1 * np.cos(theta_2 + theta_5) - 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_4 + theta_5) - 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_4 + theta_5) + 
           0.000069267455999999993313670509920144 * dq6 * np.sin(theta_5) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) + 
           0.007460552828749999684787574949496 * dq1 * np.cos(theta_2 - theta_5) - 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(theta_2 + theta_3 + theta_5) - 
           0.007460552828749999684787574949496 * dq2 * np.cos(theta_3 + theta_4 + theta_5) + 
           0.0014202397504832835976179561399135 * dq1 * np.sin(theta_2 + theta_3 + theta_4))

    c53 = (0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) - 
           0.00090160013448328346456761561711346 * dq2 * np.sin(2 * theta_5) - 
           0.00090160013448328346456761561711346 * dq3 * np.sin(2 * theta_5) - 
           0.00090160013448328346456761561711346 * dq4 * np.sin(2 * theta_5) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) + 
           0.0068888111684385000196839676789296 * dq1 * np.cos(theta_2 + theta_3 - theta_5) + 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) - 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_4 + theta_5) - 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_4 + theta_5) + 
           0.000069267455999999993313670509920144 * dq6 * np.sin(theta_5) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq2 * np.cos(theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq3 * np.cos(theta_4 - theta_5) - 
           0.0068888111684385000196839676789296 * dq1 * np.cos(theta_2 + theta_3 + theta_5) + 
           0.0014202397504832835976179561399135 * dq1 * np.sin(theta_2 + theta_3 + theta_4))

    c54 = (0.00045080006724164167807369918428151 * dq1 * np.sin(2.0 * theta_5 - theta_3 - theta_4 - theta_2) - 
           0.00090160013448328346456761561711346 * dq2 * np.sin(2 * theta_5) - 
           0.00090160013448328346456761561711346 * dq3 * np.sin(2 * theta_5) - 
           0.00045080006724164167807369918428151 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + 2.0 * theta_5) - 
           0.00090160013448328346456761561711346 * dq4 * np.sin(2.0 * theta_5) + 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 + theta_5) + 
           0.000069267455999999993313670509920144 * dq6 * np.sin(theta_5) - 
           0.0016146178873500000592114411723799 * dq1 * np.sin(theta_2 + theta_3 + theta_4 - theta_5) + 
           0.0014202397504832835976179561399135 * dq1 * np.sin(theta_2 + theta_3 + theta_4))

    c55 = 0.0

    c56 = (0.000069267455999999993313670509920144 * dq2 * np.sin(theta_5) + 
           0.000069267455999999993313670509920144 * dq3 * np.sin(theta_5) + 
           0.000069267455999999993313670509920144 * dq4 * np.sin(theta_5) + 
           0.000069267455999999993313670509920144 * dq1 * np.sin(theta_2 + theta_3 + theta_4) * np.cos(theta_5))

    c61 = (-0.000069267455999999993313670509920144 * dq2 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq3 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq4 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq5 * np.sin(theta_2 + theta_3 + theta_4) * np.cos(theta_5))

    c62 = -0.000069267455999999993313670509920144 * np.sin(theta_5) * (dq5 + dq1 * np.cos(theta_2 + theta_3 + theta_4))

    c63 = -0.000069267455999999993313670509920144 * np.sin(theta_5) * (dq5 + dq1 * np.cos(theta_2 + theta_3 + theta_4))

    c64 = -0.000069267455999999993313670509920144 * np.sin(theta_5) * (dq5 + dq1 * np.cos(theta_2 + theta_3 + theta_4))

    c65 = (-0.000069267455999999993313670509920144 * dq2 * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq3 * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq4 * np.sin(theta_5) - 
           0.000069267455999999993313670509920144 * dq1 * np.sin(theta_2 + theta_3 + theta_4) * np.cos(theta_5))

    c66 = 0.0


    # --- Gravity Vector (G) elements ---
    g1 = 0.0

    g2 = (16.190614676970001173383906234449 * np.cos(theta_2 + theta_3) + 
          37.929334950000004100800765627355 * np.cos(theta_2) - 
          1.0 * np.sin(theta_5) * (0.34441422705900004257173474542242 * np.sin(theta_2 + theta_3) * np.sin(theta_4) - 
                                 0.34441422705900004257173474542242 * np.cos(theta_2 + theta_3) * np.cos(theta_4)) - 
          1.4574320676000001723027210687178 * np.cos(theta_2 + theta_3) * np.sin(theta_4) - 
          1.4574320676000001723027210687178 * np.sin(theta_2 + theta_3) * np.cos(theta_4))

    g3 = (16.190614676970001173383906234449 * np.cos(theta_2 + theta_3) - 
          1.4574320676000001723027210687178 * np.sin(theta_2 + theta_3 + theta_4) + 
          0.34441422705900004257173474542242 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5))

    g4 = (0.34441422705900004257173474542242 * np.cos(theta_2 + theta_3 + theta_4) * np.sin(theta_5) - 
          1.4574320676000001723027210687178 * np.sin(theta_2 + theta_3 + theta_4))

    g5 = 0.34441422705900004257173474542242 * np.sin(theta_2 + theta_3 + theta_4) * np.cos(theta_5)

    g6 = 0.0


    # --- Setting up the matrices ---
    M = np.array([[m11, m12, m13, m14, m15, m16],
                  [m21, m22, m23, m24, m25, m26],
                  [m31, m32, m33, m34, m35, m36],
                  [m41, m42, m43, m44, m45, m46],
                  [m51, m52, m53, m54, m55, m56],
                  [m61, m62, m63, m64, m65, m66]])

    C = np.array([[c11, c12, c13, c14, c15, c16],
                  [c21, c22, c23, c24, c25, c26],
                  [c31, c32, c33, c34, c35, c36],
                  [c41, c42, c43, c44, c45, c46],
                  [c51, c52, c53, c54, c55, c56],
                  [c61, c62, c63, c64, c65, c66]])

    G = np.array([[g1], [g2], [g3], [g4], [g5], [g6]]) * (-1) # MATLAB's G is usually negative in tau = M*qdd + C*qd + G

    CDq = C @ np.array(dq).reshape(-1, 1) # Ensure dq is a column vector for matrix multiplication

    return M, G, CDq


# ######################################################################


def robot_dynamics(X, t, tau_func):
    """
    Função que descreve a dinâmica do robô (dX/dt).
    Será usada pelo integrador odeint.

    Args:
        X (np.array): Vetor de estado [q1...q6, dq1...dq6].
        t (float): Tempo atual (necessário para odeint, mesmo que não usado na dinâmica direta).
        tau_func (callable): Uma função que retorna o vetor de torques tau(t, q, dq).

    Returns:
        np.array: Vetor de estado derivado [dq1...dq6, ddq1...ddq6].
    """
    num_joints = 6
    q = X[:num_joints]
    dq = X[num_joints:]

    # Obtenha os torques no tempo atual
    tau = tau_func(t, q, dq)

    # Obtenha as matrizes de dinâmica do UR5
    M, G, CDq = ur5_matrices(q, dq)

    # Calcule a aceleração articular (ddq)
    # Certifique-se de que M é invertível. Adicionar uma pequena regularização
    # pode ajudar se M for quase singular em algumas configurações.
    # np.linalg.solve é mais robusto que np.linalg.inv @
    try:
        Minv = np.linalg.inv(M)
        ddq = Minv @ (tau - CDq - G)
    except np.linalg.LinAlgError:
        print(f"Aviso: Matriz de massa singular em t={t}. Usando pseudoinversa.")
        Minv = np.linalg.pinv(M) # Pseudoinversa para lidar com matrizes singulares
        ddq = Minv @ (tau - CDq - G)


    # Concatene dq e ddq para o vetor de estado derivado
    dXdt = np.concatenate((dq, ddq.flatten())) # .flatten() para garantir que ddq é 1D

    return dXdt


# ######################################################################
# vamos usar torques para ver o efeito da gravidade:

'''
# Exemplo de perfil de torque
[-100, 0, 0, 0, 0, 0] 
[100, 0, 0.0, 0, 0, 0]
[0, 0, -30, 0, 0, 0]
[0, 0, 30, 0, 0, 0]
# [0, 0, 0, 0, -10, 0]
# [0, 0, 0, 0, 10, 0]
# [0, 0, 0, 0, 0, -10]
# [0, 0, 0, 0, 0, 10]
# [0, 0, 0, 50, 0, 0]
[10.0, 20.0, 5.0, 1.0, 0.5, 0.1]
[100.0, 100.0, 100.0, 0.8, -0.3, 0.0]
[50.0, -80, 30.0, 1.0, -0.5, 0.0]
'''

def torque_profile(t, q, dq):
    """
    Define os torques aplicados às juntas.
    Aqui, vamos começar com torques nulos para ver o efeito da gravidade.
    """
    # Por exemplo, torques zero para simular queda livre sob gravidade
    tau = np.zeros((6, 1))

#     Ou, se quiser aplicar um torque em uma junta específica após um tempo
#     if t > 1.0:
#        tau[0] = 10.0 # Aplicar 5 Nm na primeira junta

    # Defina os torques constantes para cada junta
    torque = [100.0, 100.0, 100.0, 0.8, -0.3, 0.0]
    tau[0] = torque[0]  # 10 Nm na junta 1
    tau[1] = torque[1]   # 5 Nm na junta 2
    tau[2] = torque[2] # Junta 3 (já é zero)
    tau[3] = torque[3] # Junta 4 (já é zero)
    tau[4] = torque[4] # Junta 5 (já é zero)
    tau[5] = torque[5] # Junta 6 (já é zero)

    return tau


# def torque_profile(t, q, dq):
#     """
#     Define torques que variam com o tempo de forma pré-definida (ex: senoidal).
#     """
#     tau = np.zeros((6, 1))

#     # Exemplo: Um torque que pulsa na junta 1 e outro que aumenta linearmente na junta 3
#     tau[0] = 10.0 * np.sin(t/2) # Torque senoidal na junta 1
#     tau[2] = 2.0 * t          # Torque que aumenta linearmente com o tempo na junta 3
#     tau[3] = 15.0 * np.cos(t)     # Torque cossenoidal na Junta 4

#     # Limitar o torque para não ficar muito grande e desestabilizar
#     tau[2] = np.clip(tau[2], -20.0, 20.0) # Limita entre -20 e 20 Nm

#     return tau



# ######################################################################

# juntando tudo e rodando a simulação:

import matplotlib.pyplot as plt

# Condições iniciais
# q0 = np.array([0.0, -np.pi/2, 0.0, -np.pi/2, 0.0, 0.0]) # Posições iniciais das juntas (radianos)
q0 = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) # Posições iniciais das juntas (radianos)
dq0 = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0])         # Velocidades iniciais das juntas (radianos/s)

# Vetor de estado inicial
X0 = np.concatenate((q0, dq0))

# Defina o tempo de simulação
time_points = np.linspace(0, 5, 501) # Simule por 5 segundos, com 501 pontos

print("Iniciando simulação...")
# Execute a integração numérica
# O `args` passa argumentos adicionais para a função robot_dynamics
solution = odeint(robot_dynamics, X0, time_points, args=(torque_profile,))
print("Simulação concluída.")

# A 'solution' contém as posições e velocidades das juntas ao longo do tempo
q_simulated = solution[:, :6]
dq_simulated = solution[:, 6:]

## 4. Visualização dos Resultados

# Plotar as posições e velocidades das juntas para ver como elas se comportam.

# Crie uma figura com dois subplots, um ao lado do outro
# (1, 2) significa 1 linha, 2 colunas
fig, axes = plt.subplots(1, 2, figsize=(16, 7)) # Aumentei o figsize para acomodar melhor os dois gráficos

# Plotar as posições das juntas no primeiro subplot (axes[0])
for i in range(6):
    axes[0].plot(time_points, q_simulated[:, i], label=f'q{i+1}')
axes[0].set_title('Posições das Juntas ao Longo do Tempo')
axes[0].set_xlabel('Tempo (s)')
axes[0].set_ylabel('Posição (rad)')
axes[0].legend()
axes[0].grid(True)

# Plotar as velocidades das juntas no segundo subplot (axes[1])
for i in range(6):
    axes[1].plot(time_points, dq_simulated[:, i], label=f'dq{i+1}')
axes[1].set_title('Velocidades das Juntas ao Longo do Tempo')
axes[1].set_xlabel('Tempo (s)')
axes[1].set_ylabel('Velocidade (rad/s)')
axes[1].legend()
axes[1].grid(True)

# Ajuste o layout para evitar sobreposição de títulos e rótulos
plt.tight_layout()
plt.show()