<?xml version="1.0"?>

<launch>

    <!-- Associate to the robot description parameter, the urdf file that model the robot-->
    <param name="robot_description" command = "$(find xacro)/xacro $(find ggcnn_pkg)/urdf/ur5_traj_gripper.xacro" />

    <!-- Set the position in empty world-->
    <arg name="x" default="0" />
    <arg name="y" default="0" />
    <arg name="z" default="0.871" /> <!-- 1.015 -->
    <arg name="R" default="0" />
    <arg name="P" default="0" />
    <arg name="Y" default="1.57" /> <!-- 1.57 -->

    <!-- put world file as argument-->
    <arg name="world_file" default = "$(find ggcnn_pkg)/worlds/my_scene.world" />

    <!-- Launch Gezabo world in paused-->
    <include file = "$(find gazebo_ros)/launch/empty_world.launch" >
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="true"/>
        <arg name="paused" value="true" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>   


    <!-- Launch the objects -->
    <include file="$(find ggcnn_pkg)/launch/spawn_objects.launch" />

    <!-- LanÃ§ar os objetos no mundo gazebo -->
    <!-- <node pkg="ggcnn_pkg" type="spawn_objects.py" name="spawn_table_node" output="screen">      
    </node> -->

    
    <!-- Spawn the robot using the package gazebo_ros-->
    <node name="spawn_the_robot" pkg="gazebo_ros" type="spawn_model"  output="screen" 
        args="-urdf -param robot_description -model ur5 -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>

    <!-- publisher the transform tf for world and base_link of the robot -->
    <node pkg="tf" type="static_transform_publisher" name="world_to_ur5_tf" args="$(arg x) $(arg y) $(arg z) $(arg R) $(arg P) $(arg Y) /world /base_link 100" />


    <!-- ****************************** -->

     <!-- Load the controllers-->

    <rosparam command="load" file="$(find ggcnn_pkg)/config/ur5_gripper_controllers.yaml"/>

     <!-- Load the node controller manager-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"  
            output="screen" respawn="false" ns="/ur5"
            args="joint_state_controller
                eff_joint_traj_controller
                gripper_controller
                --timeout 60 ">        
    </node> 


    <!-- ****************************** -->

    <!-- Convert joint states to TF transform for rviz and rqt-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  
            output="screen" respawn="false">
            <remap from="/joint_states" to="/ur5/joint_states"/>
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <remap from="/joint_states" to="/ur5/joint_states"/>
    <!--wrist_3_joint_effort_controllerwrist_3_joint_effort_controller
    <node name="rqt_reconfigure" pkg="rqt_gui" type="rqt_gui" />
    -->

    
    <include file= "$(find ur_gripper_moveit_config)/launch/planning_context.launch" >
        <arg name="load_robot_description" value="false" />
    </include>

    <include file= "$(find ur_gripper_moveit_config)/launch/move_group.launch" >
        <arg name="publish_monitored_planning_scene" value="true" />
    </include>

    <include file= "$(find ur_gripper_moveit_config)/launch/moveit_rviz.launch" >
        <arg name="rviz_config" value="$(find ur_gripper_moveit_config)/launch/moveit.rviz" />
    </include>

    
</launch>